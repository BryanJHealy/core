{
    "Intersections":
    {
        "I0":{
            "ID": 0,
            type: "traffic_light",

        }
    }
	
    "Branches":
    {
        "B1":{
            "L_lanes": 0,  (any number)
            "LS_lanes": 1, (only 0 or 1)
            "S_lanes": 1,  (any number)
            "RS_lanes": 1, (only 0 or 1)
            "R_lanes": 0,  (any number)
            "iutbound_lanes": 3, (has to = sum of all inbound lanes from above
            "outbound_lanes": 3,

            # Node file attributes
            "id": 1, (NODE ID, use this instead of getting it from the "B1")
            "Length": 500, (Might be good to use the x and y system instead?)
            "type": "priority"


            # edge file attributes
            "Inbound_node": 0 ( "ID" of node/intersection for inbound lanes)
            "outbound_node": "output", ("output" meaning no connection (exits simulation)
            "Inbound_priority": 78,
            "Outbound_priority": 46,

            "speed": 20,
            }


        "B2":{
            "L_lanes": 0,  (any number)
            "LS_lanes": 1, (only 0 or 1)
            "S_lanes": 1,  (any number)
            "RS_lanes": 1, (only 0 or 1)
            "R_lanes": 0,  (any number)
            "outbound_lanes": 3,

            # Node file attributes
            "id": 2, (NODE ID, use this instead of getting it from the "B1")
            "Length": 500, (Might be good to use the x and y system instead?)
            "type": "priority"


            # edge file attributes
            "Inbound_node": 0 ( "ID" of node/intersection for inbound lanes)
            "outbound_node": output, ("output" meaning no connection (exits simulation)
            "Inbound_priority": 78,
            "Outbound_priority": 46,

            "numLanes": 3, (has to = sum of all inbound lanes from above
            "speed": 20,
            }
        "B3":{
            "L_lanes": 0,  (any number)
            "LS_lanes": 1, (only 0 or 1)
            "S_lanes": 1,  (any number)
            "RS_lanes": 1, (only 0 or 1)
            "R_lanes": 0,  (any number)
            "outbound_lanes": 3,

            # Node file attributes
            "id": 3, (NODE ID, use this instead of getting it from the "B1")
            "Length": 500, (Might be good to use the x and y system instead?)
            "type": "priority"


            # edge file attributes
            "inbound_node": 0 ( "ID" of node/intersection for inbound lanes)
            "outbound_node": output, ("output" meaning no connection (exits simulation)
            "Inbound_priority": 78,
            "Outbound_priority": 46,

            "numLanes": 3, (has to = sum of all inbound lanes from above
            "speed": 20,
            }
        "B4":{
            "L_lanes": 0,  (any number)
            "LS_lanes": 1, (only 0 or 1)
            "S_lanes": 1,  (any number)
            "RS_lanes": 1, (only 0 or 1)
            "R_lanes": 0,  (any number)
            "outbound_lanes": 3,

            # Node file attributes
            "id": 1, (NODE ID, use this instead of getting it from the "B1")
            "Length": 500, (Might be good to use the x and y system instead?)
            "type": "priority"


            # edge file attributes
            "Inbound_node": 0 ( "ID" of node/intersection for inbound lanes)
            "outbound_node": output, ("output" meaning no connection (exits simulation)
            "Inbound_priority": 78,
            "Outbound_priority": 46,

            "numLanes": 3, (has to = sum of all inbound lanes from above
            "speed": 20,
            }
    }

    "VehicleTypes":
    {
        "type1":{
            "id": default
            "vClass": passenger,
            "color": yellow,
            "guiShape": passenger
        }
    }

    "SUMOCFG":
    {
        "time": {"begin": 0, "end": 10000}
        "input": {"net_file": "cross.net.xml", "route_file": "cross.rou.xml"}
    }






}

